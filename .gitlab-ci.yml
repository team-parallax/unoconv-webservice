default:
  image: teamparallax/unoconv-alpine:v1.1.4

variables:
#  VERSION: ${CI_COMMIT_TAG}
  VERSION: dev

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .npm/

stages:
  - prepare
  - test
  - build
  - deploy
  - post

before_script:
  - yarn install --cache .npm --prefer-offline

install_dependencies:
  stage: prepare
  script:
    - yarn install

test_lint:
  stage: test
  script:
    - yarn run lint

#test_unit:
#  stage: test
#  script:
#    - yarn run test

build_docker_tagged:
  stage: build
  services:
      - docker:dind
  image: docker:latest
  before_script:
      - echo "Build docker image"
  variables:
      DOCKER_HOST: tcp://localhost:2375
      DOCKER_PASSWORD: ${DOCKER_PASSWORD}
      DOCKER_USER: ${DOCKER_USER}
      DOCKER_TLS_CERTDIR: ""
      REGISTRY: ${REGISTRY}
  script:
    - echo -n "${DOCKER_PASSWORD}" | docker login -u ${DOCKER_USER} --password-stdin ${REGISTRY}
    - docker build -t ${IMAGE_BASE_NAME}:${VERSION} -f ./Dockerfile .
    - docker push ${IMAGE_BASE_NAME}:${VERSION}
    - docker logout
#  only:
#    - tags

.functions: &functions |
  # Functions
  function init_helm() {
      mkdir -p /etc/deploy
      echo -n ${SERVICE_ACCOUNT} | base64 -d > /etc/deploy/sa.json
      gcloud auth activate-service-account --key-file /etc/deploy/sa.json --project=${GKE_PROJECT}
      gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}
      helm init
      helm version
  }

deploy:
  before_script:
    - *functions
  stage: deploy
  image: alpine/helm
  script:
    - init_helm
    - eval """
      helm upgrade --install
      -n "${NAMESPACE}"
      --set web.name="unoconv-webservicer-${CI_COMMIT_REF_SLUG}"
      --set web.image="${IMAGE_BASE_NAME}:${VERSION}"
      --set web.host="${URL_PRODUCTION}"
      --wait
      unoconv-webservicer-${CI_COMMIT_REF_SLUG}
      ./helm-chart
      """
#  only:
#    - tags

test_quality:
  image:
    name: eu.gcr.io/parallax-gitlab/sonarqube:latest
    entrypoint: [""]
  stage: post
  variables:
    SONAR_TOKEN: ${SONAR_TOKEN}
    SONAR_HOST_URL: "https://sonar.cloud.team-parallax.com/"
    GIT_DEPTH: 0
  script:
    - yarn install parallax-common-config@`node -p -e "require('./package.json').devDependencies['parallax-common-config']"`
    - sonar-scanner -Dsonar.projectKey=belwue-${CI_PROJECT_NAME} -Dsonar.qualitygate.wait=true
  allow_failure: true
  only:
    - tags
    - master
