{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IConversionProcessingResponse": {
				"properties": {
					"conversionId": {
						"type": "string"
					}
				},
				"required": [
					"conversionId"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"conversionId": "55309c37-aed3-4ee9-a143-f1e305333189"
				}
			},
			"IConversionRequestBody": {
				"properties": {
					"file": {
						"type": "string",
						"format": "byte"
					},
					"filename": {
						"type": "string"
					},
					"originalFormat": {
						"type": "string"
					},
					"targetFormat": {
						"type": "string"
					}
				},
				"required": [
					"file",
					"filename",
					"originalFormat",
					"targetFormat"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"file": {
						"type": "Buffer",
						"data": [
							67,
							111,
							110,
							118,
							101,
							114,
							116,
							101,
							100,
							32,
							118,
							105,
							97,
							32,
							116,
							101,
							97,
							109,
							112,
							97,
							114,
							97,
							108,
							108,
							97,
							120,
							47,
							117,
							110,
							111,
							99,
							111,
							110,
							118,
							45,
							119,
							101,
							98,
							115,
							101,
							114,
							118,
							105,
							99,
							101,
							10
						]
					},
					"filename": "assignment1",
					"originalFormat": "docx",
					"targetFormat": "pdf"
				}
			},
			"EConversionStatus": {
				"enum": [
					"converted",
					"in queue",
					"processing"
				],
				"type": "string"
			},
			"IConversionStatus": {
				"properties": {
					"conversionId": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/EConversionStatus"
					}
				},
				"required": [
					"conversionId",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IConversionQueueStatus": {
				"properties": {
					"conversions": {
						"items": {
							"$ref": "#/components/schemas/IConversionStatus"
						},
						"type": "array"
					},
					"remainingConversions": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"conversions",
					"remainingConversions"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"conversions": [
						{
							"conversionId": "55309c37-aed3-4ee9-a143-f1e305333189",
							"status": "converted"
						},
						{
							"conversionId": "52a22c37-aed3-4ee9-a442-f1e30537v189",
							"status": "processing"
						},
						{
							"conversionId": "940403bf-98ad-454c-a3b4-2e6ebf915ac6",
							"status": "in queue",
							"queuePosition": 1
						}
					],
					"remainingConversions": 1
				}
			},
			"IFileFormat": {
				"properties": {
					"description": {
						"type": "string"
					},
					"extension": {
						"type": "string"
					},
					"format": {
						"type": "string"
					},
					"mime": {
						"type": "string"
					}
				},
				"required": [
					"description",
					"extension",
					"format",
					"mime"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IFormatList": {
				"properties": {
					"document": {
						"items": {
							"$ref": "#/components/schemas/IFileFormat"
						},
						"type": "array"
					},
					"graphics": {
						"items": {
							"$ref": "#/components/schemas/IFileFormat"
						},
						"type": "array"
					},
					"presentation": {
						"items": {
							"$ref": "#/components/schemas/IFileFormat"
						},
						"type": "array"
					},
					"spreadsheet": {
						"items": {
							"$ref": "#/components/schemas/IFileFormat"
						},
						"type": "array"
					}
				},
				"required": [
					"document",
					"graphics",
					"presentation",
					"spreadsheet"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"document": [
						{
							"format": "mediawiki",
							"extension": "txt",
							"description": "MediaWiki",
							"mime": "text/plain"
						},
						{
							"format": "odt",
							"extension": "odt",
							"description": "ODF Text Document",
							"mime": "application/vnd.oasis.opendocument.text"
						}
					],
					"graphics": [
						{
							"format": "jpg",
							"extension": "jpg",
							"description": "Joint Photographic Experts Group",
							"mime": "image/jpeg"
						},
						{
							"format": "png",
							"extension": "png",
							"description": "Portable Network Graphic",
							"mime": "image/png"
						}
					],
					"presentation": [
						{
							"format": "odp",
							"extension": "odp",
							"description": "ODF Presentation",
							"mime": "application/vnd.oasis.opendocument.presentation"
						},
						{
							"format": "pptx",
							"extension": "pptx",
							"description": "Microsoft PowerPoint 2007/2010 XML",
							"mime": "application/vnd.openxmlformats-officedocument.presentationml.presentation"
						}
					],
					"spreadsheet": [
						{
							"format": "ods",
							"extension": "ods",
							"description": "ODF Spreadsheet",
							"mime": "application/vnd.oasis.opendocument.spreadsheet"
						},
						{
							"format": "xls",
							"extension": "xls",
							"description": "Microsoft Excel 97/2000/XP",
							"mime": "application/vnd.ms-excel"
						}
					]
				}
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "unoconv-webservice",
		"version": "0.3.6",
		"description": "REST api to convert files to different formats using unoconv",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "Sven Patrick Meier"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/conversion": {
			"post": {
				"operationId": "ConvertFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IConversionProcessingResponse"
								}
							}
						}
					}
				},
				"description": "Adds the file from the request body to the internal conversion queue.\nThe files in queue will be processed after the FIFO principle.",
				"tags": [
					"Conversion"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "contains the file to convert",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IConversionRequestBody"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetConversionQueueStatus",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IConversionQueueStatus"
								}
							}
						}
					}
				},
				"description": "Retrieves the status of the conversion queue and returns all conversions with\ntheir corresponding status and the amount of outstanding conversions.",
				"tags": [
					"Conversion"
				],
				"security": [],
				"parameters": []
			}
		},
		"/conversion/{fileId}": {
			"get": {
				"operationId": "GetConvertedFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IConversionStatus"
								}
							}
						}
					}
				},
				"description": "Returns the current status for a conversion given a conversionId",
				"tags": [
					"Conversion"
				],
				"security": [],
				"parameters": [
					{
						"description": "Unique identifier for the conversion of a file.",
						"in": "path",
						"name": "fileId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/formats": {
			"get": {
				"operationId": "GetSupportedFormats",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IFormatList"
								}
							}
						}
					}
				},
				"description": "Returns a list of all possible formats to convert from and to.",
				"tags": [
					"Conversion-Formats"
				],
				"security": [],
				"parameters": []
			}
		},
		"/uploadtest": {
			"post": {
				"operationId": "UploadFile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"tags": [
					"Conversion-Formats"
				],
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "http://localhost:3000/"
		}
	]
}